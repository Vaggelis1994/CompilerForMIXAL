
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Sep 07 01:07:26 EEST 2015
//----------------------------------------------------

package compiler;

import java.util.HashMap;

/** CUP generated class containing symbol constants. */
public class sym {
  /* terminals */
  public static final int READ = 6;
  public static final int ELSE = 9;
  public static final int GTR = 24;
  public static final int PLUS = 17;
  public static final int INT = 34;
  public static final int ENDIF = 10;
  public static final int THEN = 8;
  public static final int SEMI = 20;
  public static final int WHILE = 11;
  public static final int LEFT_P = 21;
  public static final int END = 4;
  public static final int ENDDO = 13;
  public static final int IF = 7;
  public static final int COLON = 29;
  public static final int ID = 33;
  public static final int WRITE = 5;
  public static final int GTR_EQ = 27;
  public static final int PROGRAM = 2;
  public static final int BEGIN = 3;
  public static final int DO = 12;
  public static final int EOF = 0;
  public static final int MULT = 16;
  public static final int DIV = 19;
  public static final int RIGHT_P = 22;
  public static final int MINUS = 18;
  public static final int DOT = 31;
  public static final int error = 1;
  public static final int LESS_EQ = 26;
  public static final int EQ = 23;
  public static final int ASSIGNMENT = 30;
  public static final int INTEGER = 15;
  public static final int VAR = 14;
  public static final int NOT_EQ = 28;
  public static final int LESS = 25;
  public static final int UMINUS = 32;
  
  public static HashMap<Integer, String> symbols;
  
  //used for retrieving the symbol as a String -see debugging function.
  static
	{ 
		symbols = new HashMap<Integer, String>();
		
		symbols.put(sym.PROGRAM, "PROGRAM");
		symbols.put(sym.BEGIN, "BEGIN");
		symbols.put(sym.END, "END");
		symbols.put(sym.WRITE, "WRITE");
		symbols.put(sym.READ, "READ");
		symbols.put(sym.IF, "IF");
		symbols.put(sym.THEN, "THEN");
		symbols.put(sym.ENDIF, "ENDIF");
		symbols.put(sym.WHILE, "WHILE");
		symbols.put(sym.DO, "DO");
		symbols.put(sym.ENDDO, "ENDDO");
		symbols.put(sym.VAR, "VAR");
		symbols.put(sym.ID, "ID");
		symbols.put(sym.PLUS, "+");
		symbols.put(sym.MINUS, "-");
		symbols.put(sym.MULT, "*");
		symbols.put(sym.DIV, "/");
		symbols.put(sym.GTR, ">");
		symbols.put(sym.GTR_EQ, ">=");
		symbols.put(sym.LESS, "<");
		symbols.put(sym.LESS_EQ, "<=");
		symbols.put(sym.EQ, "=");
		symbols.put(sym.NOT_EQ, "!=");
		symbols.put(sym.DOT, ".");
		symbols.put(sym.COLON, ":");
		symbols.put(sym.ASSIGNMENT, ":=");
		symbols.put(sym.SEMI, ";");
		symbols.put(sym.LEFT_P, "(");
		symbols.put(sym.RIGHT_P, ")");
		
	}
  
}

